<!DOCTYPE html>
<html lang="en">
<head>

  <!-- Basic Page Needs
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <meta charset="utf-8">
  <title>Profscribe</title>
  <meta name="description" content="">
  <meta name="author" content="">

  <!-- Mobile Specific Metas
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- FONT
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <link href="//fonts.googleapis.com/css?family=Raleway:400,300,600" rel="stylesheet" type="text/css">

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

  <script type="text/javascript" src="https://cdn.jsdelivr.net/binaryjs/0.2.1/binary.min.js"></script>
  <!-- CSS
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <link rel="stylesheet" href="css/normalize.css">
  <link rel="stylesheet" href="css/skeleton.css">

  <!-- Favicon
  –––––––––––––––––––––––––––––––––––––––––––––––––– -->
  <link rel="icon" type="image/png" href="images/favicon.png">
  
</head>

<body>


<div class="container" style="margin-top: 10%">

  <div class="row ">
   
      
       <h1><time>00:00:00</time></h1>
  
  </div>

  <br/>


    <div class="row">
      <button id="start" class="six columns button-primary">Start Streaming</button>
      <button id="stop" class=" six columns button-primary">End Stream</button>
    </div>
</div>

<style type="text/css">
  time {
    font-size: 2em;
    line-height: 100px;
    text-align: center;
  }
</style>
  



  <script type="text/javascript">

    var h1 = document.getElementsByTagName('h1')[0]
    var start = document.getElementById('start')
    var stop = document.getElementById('stop')
    var seconds = 0, minutes = 0, hours = 0,
    t;

    function add() {
    seconds++;
    if (seconds >= 60) {
        seconds = 0;
        minutes++;
        if (minutes >= 60) {
            minutes = 0;
            hours++;
        }
    }
    
    h1.textContent = (hours ? (hours > 9 ? hours : "0" + hours) : "00") + ":" + (minutes ? (minutes > 9 ? minutes : "0" + minutes) : "00") + ":" + (seconds > 9 ? seconds : "0" + seconds);

        timer();
    }
    function timer() {
        t = setTimeout(add, 1000);
    }




    /*streaming logic*/
    //var client = new BinaryClient('ws://127.0.0.1:9001');
    var client = new BinaryClient('wss://profscribe.ruelas.me:9001')

    client.on('open', function() {
    window.Stream = client.createStream();

    if (!navigator.getUserMedia)
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia ||
    navigator.mozGetUserMedia || navigator.msGetUserMedia;

    if (navigator.getUserMedia) {
      navigator.getUserMedia({audio:true}, success, function(e) {
        alert('Error capturing audio.');
      });
    } else alert('getUserMedia not supported in this browser.');

    var recording = false;

    window.startRecording = function() {
      recording = true;
    }

    window.stopRecording = function() {
      recording = false;
      window.Stream.end();
    }

    function success(e) {
      audioContext = window.AudioContext || window.webkitAudioContext;
      context = new audioContext();

      // the sample rate is in context.sampleRate
      audioInput = context.createMediaStreamSource(e);

      var bufferSize = 2048;
      recorder = context.createScriptProcessor(bufferSize, 1, 1);

      recorder.onaudioprocess = function(e){
        if(!recording) return;
        console.log ('recording');
        var left = e.inputBuffer.getChannelData(0);
        window.Stream.write(convertoFloat32ToInt16(left));
      }

      audioInput.connect(recorder)
      recorder.connect(context.destination); 
    }

    function convertoFloat32ToInt16(buffer) {
      var l = buffer.length;
      var buf = new Int16Array(l)

      while (l--) {
        buf[l] = buffer[l]*0xFFFF;    //convert to 16 bit
      }
      return buf.buffer
    }
  });










    let isStreaming = false
    
    $('#stop').click(function(event){
      if(isStreaming){
        isStreaming = false
        clearTimeout(t);
        stopRecording()
        // end the network requrest
      }
      else {
        // we already done nigga, do nothing
      }
    })

    $('#start').click(function(event){
      if (isStreaming){
        // we already streamin bruhhh, do nothing
      }
      else {
        isStreaming = true
        timer();
        startRecording()
        // start the network request
      }
    })


  </script>


</body>
</html>